//! stanz - v8.1.27 https://github.com/kirakiray/stanz  (c) 2018-2024 YAO
const e=()=>Math.random().toString(32).slice(2),t=Object.prototype.toString,r=e=>{const r=(s=e,t.call(s).toLowerCase().replace(/(\[object )|(])/g,""));var s;return"array"===r||"object"===r},s={value:null};"undefined"!=typeof document&&(document.currentScript?s.value=document.currentScript.attributes.hasOwnProperty("debug"):s.value=!0);let n,o=0;const a=new Set;function c(t,r=0){let c=null,i=[];return function(...l){i.push(...l),r>0?(clearTimeout(c),c=setTimeout((()=>{t.call(this,i),i=[],c=null}),r)):null===c&&(c=1,function(t){if(clearTimeout(n),n=setTimeout((()=>{o=0})),s.value)return void Promise.resolve().then((()=>{if(o++,o>1e5){const e="nextTick exceeds thread limit";throw console.error({desc:e,lastCall:t}),new Error(e)}t()}));const r=`t-${e()}`;a.add(r),Promise.resolve().then((()=>{if(o++,o>5e4){a.clear();const e="nextTick exceeds thread limit";throw console.error({desc:e,lastCall:t}),new Error(e)}a.has(r)&&(t(),a.delete(r))}))}((()=>{c=null;const e=i.slice();i=[],t.call(this,e)})))}}const{assign:i,freeze:l}=Object;class u{constructor(e){i(this,e),l(this)}hasModified(e){if("array"===this.type)return this.path.includes(this.currentTarget.get(e));const t=e.split(".");if(this.currentTarget===this.target&&this.name===t[0])return!0;const r=h(this,t).indexOf(this.target);if(r>-1){const e=t.slice(r+1);return!e.length||this.name===e[0]}return this.path.includes(this.currentTarget[e])}hasReplaced(e){if("set"!==this.type)return!1;const t=e.split(".");if(this.target===this.currentTarget&&this.name===t[0])return!0;const r=h(this,t).indexOf(this.target);if(r>-1){return t.slice(r+1)[0]===this.name}return!1}}const h=(e,t)=>{const r=[],s=t.slice();let n=e.currentTarget;for(;s.length;){const e=s.shift();n&&(n=n[e]),r.push(n)}return r};class f extends Array{constructor(e){super(...e)}hasModified(e){return this.some((t=>t.hasModified(e)))}hasReplaced(e){return this.some((t=>t.hasReplaced(e)))}}const d=({type:e,currentTarget:t,target:r,name:s,value:n,oldValue:o,args:a,path:c=[]})=>{if(c&&c.includes(t))return void console.warn("Circular references appear");let i={type:e,target:r,name:s,oldValue:o,value:n};if("array"===e&&(delete i.value,i.args=a),t._hasWatchs){const e=new u({currentTarget:t,...i,path:[...c]});t[E].forEach((t=>{t(e)}))}t._update&&t.owner.forEach((e=>{d({currentTarget:e,...i,path:[t,...c]})}))};var p={watch(t){const r="w-"+e();return this[E].set(r,t),r},unwatch(e){return this[E].delete(e)},watchTick(e,t){return this.watch(c((t=>{(function(e){try{e.xid}catch(e){return function(e){const t=e.stack.split(/\\n/)[0].toLowerCase();return!(!t.includes("proxy")||!t.includes("revoked"))}(e)}return!1})(this)||(t=t.filter((e=>{try{e.path.forEach((e=>e.xid))}catch(e){return!1}return!0})),e(new f(t)))}),t||0))},refresh(e){const t={...e,type:"refresh",target:this,currentTarget:this};d(t)},watchUntil(e){return new Promise((t=>{let r;const s=this.watch(r=()=>{e()&&(this.unwatch(s),t(this))});r()}))}};const{defineProperties:g}=Object,y=({target:e,key:t,value:s,receiver:n,type:o,succeed:a})=>{const c=n[t];let i=s;if(A(i)){if(c===s)return!0;i._owner.push(n)}else if(r(s)){const r=Object.getOwnPropertyDescriptor(e,t);r&&!r.hasOwnProperty("value")||(i=new M(s),i._owner.push(n))}const l=c===s;!l&&A(c)&&w(c,n);const u=a(i);return!l&&!e.__unupdate&&d({type:o||"set",target:n,currentTarget:n,name:t,value:s,oldValue:c}),u},w=(e,t)=>{if(A(e)){const r=e._owner.indexOf(t);r>-1?e._owner.splice(r,1):console.error({desc:"This data is wrong, the owner has no boarding object at the time of deletion",target:t,mismatch:e})}},m={set(e,t,r,s){if("symbol"==typeof t)return Reflect.set(e,t,r,s);if(/^_/.test(t))return e.hasOwnProperty(t)?Reflect.set(e,t,r,s):g(e,{[t]:{writable:!0,configurable:!0,value:r}}),!0;try{return y({target:e,key:t,value:r,receiver:s,succeed:r=>Reflect.set(e,t,r,s)})}catch(e){const n=new Error(`failed to set ${t} \n ${e.stack}`,{cause:e});throw Object.assign(n,{key:t,value:r,target:s}),n}},deleteProperty:(e,t)=>/^_/.test(t)||"symbol"==typeof t?Reflect.deleteProperty(e,t):y({target:e,key:t,value:void 0,receiver:e[T],type:"delete",succeed:()=>Reflect.deleteProperty(e,t)})},b=["push","pop","shift","unshift","splice","reverse","sort","fill","copyWithin"],v=Symbol("placeholder");const O={},_=Array.prototype;b.forEach((e=>{_[e]&&(O[e]=function(...t){const s=Array.from(this),n=_[e].apply(this[P],t),{deletedItems:o,addedItems:a}=function(e,t){const r=Array.from(t),s=Array.from(e),n=[],o=new Map,a=e.length;for(let t=0;t<a;t++){const s=e[t],o=r.indexOf(s);o>-1?r[o]=v:n.push(s)}const c=t.length;for(let e=0;e<c;e++){const r=t[e],n=s.indexOf(r);n>-1?s[n]=v:o.set(e,r)}return{deletedItems:n,addedItems:o}}(s,this);for(let[e,t]of a)A(t)?t._owner.push(this):r(t)&&(this.__unupdate=1,this[e]=t,delete this.__unupdate);for(let e of o)w(e,this);return d({type:"array",currentTarget:this,target:this,args:t,name:e,oldValue:s}),n===this[P]?this[T]:n})})),["concat","filter","slice","flatMap","map"].forEach((e=>{if("constructor"===e||b.includes(e))return;const t=Array.prototype[e];t instanceof Function&&(O[e]=function(...e){return t.call(Array.from(this),...e)})}));const{defineProperties:x,getOwnPropertyDescriptor:j,entries:k}=Object,P=Symbol("self"),T=Symbol("proxy"),E=Symbol("watchs"),S=Symbol("isxdata"),A=e=>e&&!!e[S];function R(t,r=m){let s,{proxy:n,revoke:o}=Proxy.revocable(this,r);return n._update=1,x(this,{xid:{value:t.xid||e()},_owner:{value:[]},owner:{configurable:!0,get(){return new Set(this._owner)}},[S]:{value:!0},[P]:{configurable:!0,get:()=>this},[T]:{configurable:!0,get:()=>n},[E]:{get:()=>s||(s=new Map)},_hasWatchs:{get:()=>!!s},_revoke:{value:o}}),Object.keys(t).forEach((e=>{const r=j(t,e);let{value:s,get:o,set:a}=r;o||a?x(this,{[e]:r}):n[e]=s})),n}class M extends Array{constructor(e){return super(),R.call(this,e)}revoke(){const e=this[P];e._onrevokes&&(e._onrevokes.forEach((e=>e())),e._onrevokes.length=0),e.__unupdate=1,e[E].clear(),k(this).forEach((([e,t])=>{A(t)&&(this[e]=null)})),e._owner.forEach((e=>{k(e).forEach((([t,r])=>{r===this&&(e[t]=null)}))})),delete e[P],delete e[T],e._revoke()}toJSON(){let e={},t=!0,r=-1;Object.keys(this).forEach((s=>{let n=this[s];/\D/.test(s)?t=!1:(s=parseInt(s))>r&&(r=s),A(n)&&(n=n.toJSON()),e[s]=n})),t&&(e.length=r+1,e=Array.from(e));const s=this.xid;return x(e,{xid:{get:()=>s}}),e}toString(){return JSON.stringify(this.toJSON())}extend(e,t){return((e,t,r={})=>([...Object.getOwnPropertyNames(t),...Object.getOwnPropertySymbols(t)].forEach((s=>{const n=Object.getOwnPropertyDescriptor(t,s),{configurable:o,enumerable:a,writable:c,get:i,set:l,value:u}=n;"value"in n?e.hasOwnProperty(s)?e[s]=u:Object.defineProperty(e,s,{enumerable:a,configurable:o,writable:c,...r,value:u}):Object.defineProperty(e,s,{enumerable:a,configurable:o,...r,get:i,set:l})})),e))(this,e,t)}get(e){if(/\./.test(e)){const t=e.split(".");let r=this;for(let e=0,s=t.length;e<s;e++)try{r=r[t[e]]}catch(s){const n=new Error(`Failed to get data : ${t.slice(0,e).join(".")} \n${s.stack}`,{cause:s});throw Object.assign(n,{target:r}),n}return r}return this[e]}set(e,t){if(/\./.test(e)){const r=e.split("."),s=r.pop();let n=this;for(let e=0,t=r.length;e<t;e++)try{n=n[r[e]]}catch(t){const s=new Error(`Failed to get data : ${r.slice(0,e).join(".")} \n${t.stack}`,{cause:t});throw Object.assign(s,{target:n}),s}return n[s]=t}return this[e]=t}}M.prototype.extend({...p,...O},{enumerable:!1});const $=e=>new M(e);Object.assign($,{is:A});export{$ as default};
//# sourceMappingURL=stanz.min.mjs.map
