{"version":3,"file":"stanz.min.mjs","sources":["../src/public.mjs","../src/watch.mjs","../src/accessor.mjs","../src/array.mjs","../src/main.mjs","../src/base.mjs"],"sourcesContent":["export const getRandomId = () => Math.random().toString(32).slice(2);\n\nconst objectToString = Object.prototype.toString;\nexport const getType = (value) =>\n  objectToString\n    .call(value)\n    .toLowerCase()\n    .replace(/(\\[object )|(])/g, \"\");\n\nexport const isObject = (obj) => {\n  const type = getType(obj);\n  return type === \"array\" || type === \"object\";\n};\n\nexport const isDebug = {\n  value: null,\n};\n\nif (typeof document !== \"undefined\") {\n  if (document.currentScript) {\n    isDebug.value = document.currentScript.attributes.hasOwnProperty(\"debug\");\n  } else {\n    isDebug.value = true;\n  }\n}\n\nlet asyncsCounter = 0;\nlet afterTimer;\nconst tickSets = new Set();\nexport function nextTick(callback) {\n  clearTimeout(afterTimer);\n  afterTimer = setTimeout(() => {\n    asyncsCounter = 0;\n  });\n\n  if (isDebug.value) {\n    Promise.resolve().then(() => {\n      asyncsCounter++;\n      if (asyncsCounter > 100000) {\n        const desc = `nextTick exceeds thread limit`;\n        console.error({\n          desc,\n          lastCall: callback,\n        });\n        throw new Error(desc);\n      }\n\n      callback();\n    });\n    return;\n  }\n\n  const tickId = `t-${getRandomId()}`;\n  tickSets.add(tickId);\n  Promise.resolve().then(() => {\n    asyncsCounter++;\n    // console.log(\"asyncsCounter => \", asyncsCounter);\n    if (asyncsCounter > 50000) {\n      tickSets.clear();\n      const desc = `nextTick exceeds thread limit`;\n      console.error({\n        desc,\n        lastCall: callback,\n      });\n      throw new Error(desc);\n    }\n    if (tickSets.has(tickId)) {\n      callback();\n      tickSets.delete(tickId);\n    }\n  });\n  return tickId;\n}\n\n// export const clearTick = (id) => tickSets.delete(id);\n\nexport function debounce(func, wait = 0) {\n  let timeout = null;\n  let hisArgs = [];\n\n  return function (...args) {\n    hisArgs.push(...args);\n\n    if (wait > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        func.call(this, hisArgs);\n        hisArgs = [];\n        timeout = null;\n      }, wait);\n    } else {\n      if (timeout === null) {\n        timeout = 1;\n        nextTick(() => {\n          timeout = null;\n          const args = hisArgs.slice();\n          hisArgs = [];\n          func.call(this, args);\n        });\n      }\n    }\n  };\n}\n\n// Enhanced methods for extending objects\nexport const extend = (_this, proto, descriptor = {}) => {\n  [\n    ...Object.getOwnPropertyNames(proto),\n    ...Object.getOwnPropertySymbols(proto),\n  ].forEach((k) => {\n    const result = Object.getOwnPropertyDescriptor(proto, k);\n    const { configurable, enumerable, writable, get, set, value } = result;\n\n    if (\"value\" in result) {\n      if (_this.hasOwnProperty(k)) {\n        _this[k] = value;\n      } else {\n        Object.defineProperty(_this, k, {\n          enumerable,\n          configurable,\n          writable,\n          ...descriptor,\n          value,\n        });\n      }\n    } else {\n      Object.defineProperty(_this, k, {\n        enumerable,\n        configurable,\n        ...descriptor,\n        get,\n        set,\n      });\n    }\n  });\n\n  return _this;\n};\n\nexport function dataRevoked(data) {\n  try {\n    data.xid;\n  } catch (err) {\n    return isRevokedErr(err);\n  }\n\n  return false;\n}\n\nexport function isRevokedErr(error) {\n  const firstLine = error.stack.split(/\\\\n/)[0].toLowerCase();\n  if (firstLine.includes(\"proxy\") && firstLine.includes(\"revoked\")) {\n    return true;\n  }\n\n  return false;\n}\n","import { getRandomId, debounce, dataRevoked } from \"./public.mjs\";\nimport { WATCHS } from \"./main.mjs\";\nconst { assign, freeze } = Object;\n\nclass Watcher {\n  constructor(opts) {\n    assign(this, opts);\n    freeze(this);\n  }\n\n  hasModified(k) {\n    if (this.type === \"array\") {\n      return this.path.includes(this.currentTarget.get(k));\n    }\n\n    const keys = k.split(\".\");\n\n    if (this.currentTarget === this.target && this.name === keys[0]) {\n      return true;\n    }\n\n    const modifieds = getModifieds(this, keys);\n\n    const positionIndex = modifieds.indexOf(this.target);\n    if (positionIndex > -1) {\n      const currentKeys = keys.slice(positionIndex + 1);\n\n      if (!currentKeys.length) {\n        // This is listening for changes in the child object itself\n        return true;\n      }\n\n      return this.name === currentKeys[0];\n    }\n\n    // Data belonging to the chain of change\n    return this.path.includes(this.currentTarget[k]);\n  }\n\n  hasReplaced(k) {\n    if (this.type !== \"set\") {\n      return false;\n    }\n\n    const keys = k.split(\".\");\n\n    if (this.target === this.currentTarget && this.name === keys[0]) {\n      return true;\n    }\n\n    const modifieds = getModifieds(this, keys);\n\n    const positionIndex = modifieds.indexOf(this.target);\n\n    if (positionIndex > -1) {\n      const currentKeys = keys.slice(positionIndex + 1);\n\n      return currentKeys[0] === this.name;\n    }\n\n    return false;\n  }\n}\n\nconst getModifieds = (_this, keys) => {\n  const modifieds = [];\n\n  const cloneKeys = keys.slice();\n  let target = _this.currentTarget;\n  while (cloneKeys.length) {\n    const targetKey = cloneKeys.shift();\n    if (target) {\n      target = target[targetKey];\n    }\n\n    modifieds.push(target);\n  }\n\n  return modifieds;\n};\n\nclass Watchers extends Array {\n  constructor(arr) {\n    super(...arr);\n  }\n\n  hasModified(key) {\n    return this.some((e) => e.hasModified(key));\n  }\n\n  hasReplaced(key) {\n    return this.some((e) => e.hasReplaced(key));\n  }\n}\n\nexport const emitUpdate = ({\n  type,\n  currentTarget,\n  target,\n  name,\n  value,\n  oldValue,\n  args,\n  path = [],\n}) => {\n  if (path && path.includes(currentTarget)) {\n    console.warn(\"Circular references appear\");\n    return;\n  }\n\n  let options = {\n    type,\n    target,\n    name,\n    oldValue,\n    value,\n  };\n\n  if (type === \"array\") {\n    delete options.value;\n    options.args = args;\n  }\n\n  if (currentTarget._hasWatchs) {\n    const watcher = new Watcher({\n      currentTarget,\n      ...options,\n      path: [...path],\n    });\n\n    currentTarget[WATCHS].forEach((func) => {\n      func(watcher);\n    });\n  }\n\n  currentTarget._update &&\n    currentTarget.owner.forEach((parent) => {\n      emitUpdate({\n        currentTarget: parent,\n        ...options,\n        path: [currentTarget, ...path],\n      });\n    });\n};\n\nexport default {\n  watch(callback) {\n    const wid = \"w-\" + getRandomId();\n\n    this[WATCHS].set(wid, callback);\n\n    return wid;\n  },\n\n  unwatch(wid) {\n    return this[WATCHS].delete(wid);\n  },\n\n  watchTick(callback, wait) {\n    return this.watch(\n      debounce((arr) => {\n        if (dataRevoked(this)) {\n          // console.warn(`The revoked object cannot use watchTick : `, this);\n          return;\n        }\n        arr = arr.filter((e) => {\n          try {\n            e.path.forEach((item) => item.xid);\n          } catch (err) {\n            return false;\n          }\n\n          return true;\n        });\n\n        callback(new Watchers(arr));\n      }, wait || 0)\n    );\n  },\n  // For manual use of emitUpdate\n  refresh(opts) {\n    const options = {\n      ...opts,\n      type: \"refresh\",\n      target: this,\n      currentTarget: this,\n    };\n    emitUpdate(options);\n  },\n  watchUntil(func) {\n    return new Promise((resolve) => {\n      let f;\n      const tid = this.watch(\n        (f = () => {\n          const bool = func();\n          if (bool) {\n            this.unwatch(tid);\n            resolve(this);\n          }\n        })\n      );\n\n      f();\n    });\n  },\n};\n","import { isObject } from \"./public.mjs\";\nimport Stanz, { PROXY, isxdata } from \"./main.mjs\";\nimport { emitUpdate } from \"./watch.mjs\";\n\nconst { defineProperties } = Object;\n\nexport const setData = ({ target, key, value, receiver, type, succeed }) => {\n  const oldValue = receiver[key];\n\n  let data = value;\n  if (isxdata(data)) {\n    if (oldValue === value) {\n      return true;\n    }\n    data._owner.push(receiver);\n  } else if (isObject(value)) {\n    const desc = Object.getOwnPropertyDescriptor(target, key);\n    if (!desc || desc.hasOwnProperty(\"value\")) {\n      data = new Stanz(value);\n      data._owner.push(receiver);\n    }\n  }\n\n  const isSame = oldValue === value;\n\n  if (!isSame && isxdata(oldValue)) {\n    clearData(oldValue, receiver);\n  }\n\n  const reval = succeed(data);\n\n  !isSame &&\n    // __unupdate: Let the system not trigger an upgrade, system self-use attribute\n    !target.__unupdate &&\n    emitUpdate({\n      type: type || \"set\",\n      target: receiver,\n      currentTarget: receiver,\n      name: key,\n      value,\n      oldValue,\n    });\n\n  return reval;\n};\n\nexport const clearData = (val, target) => {\n  if (isxdata(val)) {\n    const index = val._owner.indexOf(target);\n    if (index > -1) {\n      val._owner.splice(index, 1);\n    } else {\n      console.error({\n        desc: \"This data is wrong, the owner has no boarding object at the time of deletion\",\n        target,\n        mismatch: val,\n      });\n    }\n  }\n};\n\nexport const handler = {\n  set(target, key, value, receiver) {\n    if (typeof key === \"symbol\") {\n      return Reflect.set(target, key, value, receiver);\n    }\n\n    // Set properties with _ prefix directly\n    if (/^_/.test(key)) {\n      if (!target.hasOwnProperty(key)) {\n        defineProperties(target, {\n          [key]: {\n            writable: true,\n            configurable: true,\n            value,\n          },\n        });\n      } else {\n        Reflect.set(target, key, value, receiver);\n      }\n      return true;\n    }\n\n    try {\n      return setData({\n        target,\n        key,\n        value,\n        receiver,\n        succeed(data) {\n          return Reflect.set(target, key, data, receiver);\n        },\n      });\n    } catch (error) {\n      const err = new Error(`failed to set ${key} \\n ${error.stack}`, {\n        cause: error,\n      });\n\n      Object.assign(err, {\n        key,\n        value,\n        target: receiver,\n      });\n\n      throw err;\n    }\n  },\n  deleteProperty(target, key) {\n    if (/^_/.test(key) || typeof key === \"symbol\") {\n      return Reflect.deleteProperty(target, key);\n    }\n\n    return setData({\n      target,\n      key,\n      value: undefined,\n      receiver: target[PROXY],\n      type: \"delete\",\n      succeed() {\n        return Reflect.deleteProperty(target, key);\n      },\n    });\n  },\n};\n","import { clearData } from \"./accessor.mjs\";\nimport { SELF, PROXY, isxdata } from \"./main.mjs\";\nimport { isObject } from \"./public.mjs\";\nimport { emitUpdate } from \"./watch.mjs\";\n\nconst mutatingMethods = [\n  \"push\",\n  \"pop\",\n  \"shift\",\n  \"unshift\",\n  \"splice\",\n  \"reverse\",\n  \"sort\",\n  \"fill\",\n  \"copyWithin\",\n];\n\nconst holder = Symbol(\"placeholder\");\n\nfunction compareArrays(oldArray, newArray) {\n  const backupNewArray = Array.from(newArray);\n  const backupOldArray = Array.from(oldArray);\n  const deletedItems = [];\n  const addedItems = new Map();\n\n  const oldLen = oldArray.length;\n  for (let i = 0; i < oldLen; i++) {\n    const oldItem = oldArray[i];\n    const newIndex = backupNewArray.indexOf(oldItem);\n    if (newIndex > -1) {\n      backupNewArray[newIndex] = holder;\n    } else {\n      deletedItems.push(oldItem);\n    }\n  }\n\n  const newLen = newArray.length;\n  for (let i = 0; i < newLen; i++) {\n    const newItem = newArray[i];\n    const oldIndex = backupOldArray.indexOf(newItem);\n    if (oldIndex > -1) {\n      backupOldArray[oldIndex] = holder;\n    } else {\n      addedItems.set(i, newItem);\n    }\n  }\n\n  return { deletedItems, addedItems };\n}\n\nconst fn = {};\n\nconst arrayFn = Array.prototype;\n\nmutatingMethods.forEach((methodName) => {\n  if (arrayFn[methodName]) {\n    fn[methodName] = function (...args) {\n      const backupArr = Array.from(this);\n\n      const reval = arrayFn[methodName].apply(this[SELF], args);\n\n      const { deletedItems, addedItems } = compareArrays(backupArr, this);\n\n      // Refactoring objects as proxy instances\n      for (let [key, value] of addedItems) {\n        if (isxdata(value)) {\n          value._owner.push(this);\n        } else if (isObject(value)) {\n          this.__unupdate = 1;\n          this[key] = value;\n          delete this.__unupdate;\n        }\n      }\n\n      for (let item of deletedItems) {\n        clearData(item, this);\n      }\n\n      emitUpdate({\n        type: \"array\",\n        currentTarget: this,\n        target: this,\n        args,\n        name: methodName,\n        oldValue: backupArr,\n      });\n\n      if (reval === this[SELF]) {\n        return this[PROXY];\n      }\n\n      return reval;\n    };\n  }\n});\n\n// Object.getOwnPropertyNames(Array.prototype).forEach((methodName) => {\n[\"concat\", \"filter\", \"slice\", \"flatMap\", \"map\"].forEach((methodName) => {\n  if (methodName === \"constructor\" || mutatingMethods.includes(methodName)) {\n    return;\n  }\n\n  const oldFunc = Array.prototype[methodName];\n  if (oldFunc instanceof Function) {\n    fn[methodName] = function (...args) {\n      return oldFunc.call(Array.from(this), ...args);\n    };\n  }\n});\n\nexport default fn;\n","import { extend, getRandomId } from \"./public.mjs\";\nimport { handler as stanzHandler } from \"./accessor.mjs\";\nimport arrayFn from \"./array.mjs\";\nimport watchFn from \"./watch.mjs\";\nconst { defineProperties, getOwnPropertyDescriptor, entries } = Object;\n\nexport const SELF = Symbol(\"self\");\nexport const PROXY = Symbol(\"proxy\");\nexport const WATCHS = Symbol(\"watchs\");\nexport const ISXDATA = Symbol(\"isxdata\");\n\nexport const isxdata = (val) => val && !!val[ISXDATA];\n\nexport function constructor(data, handler = stanzHandler) {\n  // const proxySelf = new Proxy(this, handler);\n  let { proxy: proxySelf, revoke } = Proxy.revocable(this, handler);\n\n  // Determines the properties of the listener bubble\n  proxySelf._update = 1;\n\n  let watchs;\n\n  defineProperties(this, {\n    xid: { value: data.xid || getRandomId() },\n    // Save all parent objects\n    _owner: {\n      value: [],\n    },\n    owner: {\n      configurable: true,\n      get() {\n        return new Set(this._owner);\n      },\n    },\n    [ISXDATA]: {\n      value: true,\n    },\n    [SELF]: {\n      configurable: true,\n      get: () => this,\n    },\n    [PROXY]: {\n      configurable: true,\n      get: () => proxySelf,\n    },\n    // Save the object of the listener function\n    [WATCHS]: {\n      get: () => watchs || (watchs = new Map()),\n    },\n    _hasWatchs: {\n      get: () => !!watchs,\n    },\n    _revoke: {\n      value: revoke,\n    },\n  });\n\n  Object.keys(data).forEach((key) => {\n    const descObj = getOwnPropertyDescriptor(data, key);\n    let { value, get, set } = descObj;\n\n    if (get || set) {\n      defineProperties(this, {\n        [key]: descObj,\n      });\n    } else {\n      // Set the function directly\n      proxySelf[key] = value;\n    }\n  });\n\n  return proxySelf;\n}\n\nexport default class Stanz extends Array {\n  constructor(data) {\n    super();\n\n    return constructor.call(this, data);\n  }\n\n  // This method is still in the experimental period\n  revoke() {\n    const self = this[SELF];\n\n    if (self._onrevokes) {\n      self._onrevokes.forEach((f) => f());\n      self._onrevokes.length = 0;\n    }\n\n    self.__unupdate = 1;\n\n    self[WATCHS].clear();\n\n    entries(this).forEach(([name, value]) => {\n      if (isxdata(value)) {\n        this[name] = null;\n      }\n    });\n\n    self._owner.forEach((parent) => {\n      entries(parent).forEach(([name, value]) => {\n        if (value === this) {\n          parent[name] = null;\n        }\n      });\n    });\n\n    delete self[SELF];\n    delete self[PROXY];\n    self._revoke();\n  }\n\n  toJSON() {\n    let obj = {};\n\n    let isPureArray = true;\n    let maxId = -1;\n\n    Object.keys(this).forEach((k) => {\n      let val = this[k];\n\n      if (!/\\D/.test(k)) {\n        k = parseInt(k);\n        if (k > maxId) {\n          maxId = k;\n        }\n      } else {\n        isPureArray = false;\n      }\n\n      if (isxdata(val)) {\n        val = val.toJSON();\n      }\n\n      obj[k] = val;\n    });\n\n    if (isPureArray) {\n      obj.length = maxId + 1;\n      obj = Array.from(obj);\n    }\n\n    const xid = this.xid;\n    defineProperties(obj, {\n      xid: {\n        get: () => xid,\n      },\n    });\n\n    return obj;\n  }\n\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n\n  extend(obj, desc) {\n    return extend(this, obj, desc);\n  }\n\n  get(key) {\n    if (/\\./.test(key)) {\n      const keys = key.split(\".\");\n      let target = this;\n      for (let i = 0, len = keys.length; i < len; i++) {\n        try {\n          target = target[keys[i]];\n        } catch (error) {\n          const err = new Error(\n            `Failed to get data : ${keys.slice(0, i).join(\".\")} \\n${\n              error.stack\n            }`,\n            { cause: error }\n          );\n          Object.assign(err, {\n            target,\n          });\n          throw err;\n        }\n      }\n\n      return target;\n    }\n\n    return this[key];\n  }\n  set(key, value) {\n    if (/\\./.test(key)) {\n      const keys = key.split(\".\");\n      const lastKey = keys.pop();\n      let target = this;\n      for (let i = 0, len = keys.length; i < len; i++) {\n        try {\n          target = target[keys[i]];\n        } catch (error) {\n          const err = new Error(\n            `Failed to get data : ${keys.slice(0, i).join(\".\")} \\n${\n              error.stack\n            }`,\n            { cause: error }\n          );\n          Object.assign(err, {\n            target,\n          });\n          throw err;\n        }\n      }\n\n      return (target[lastKey] = value);\n    }\n\n    return (this[key] = value);\n  }\n}\n\nStanz.prototype.extend(\n  { ...watchFn, ...arrayFn },\n  {\n    enumerable: false,\n  }\n);\n","import Stanz, { isxdata } from \"./main.mjs\";\n\nconst stanz = (data) => {\n  return new Stanz(data);\n};\n\nObject.assign(stanz, { is: isxdata });\n\nexport default stanz;\n"],"names":["getRandomId","Math","random","toString","slice","objectToString","Object","prototype","isObject","obj","type","value","call","toLowerCase","replace","isDebug","document","currentScript","attributes","hasOwnProperty","afterTimer","asyncsCounter","tickSets","Set","debounce","func","wait","timeout","hisArgs","args","push","clearTimeout","setTimeout","this","callback","Promise","resolve","then","desc","console","error","lastCall","Error","tickId","add","clear","has","delete","nextTick","assign","freeze","Watcher","constructor","opts","hasModified","k","path","includes","currentTarget","get","keys","split","target","name","positionIndex","getModifieds","indexOf","currentKeys","length","hasReplaced","_this","modifieds","cloneKeys","targetKey","shift","Watchers","Array","arr","super","key","some","e","emitUpdate","oldValue","warn","options","_hasWatchs","watcher","WATCHS","forEach","_update","owner","parent","watchFn","watch","wid","set","unwatch","watchTick","data","xid","err","firstLine","stack","isRevokedErr","dataRevoked","filter","item","refresh","watchUntil","f","tid","defineProperties","setData","receiver","succeed","isxdata","_owner","getOwnPropertyDescriptor","Stanz","isSame","clearData","reval","__unupdate","val","index","splice","mismatch","handler","Reflect","test","writable","configurable","cause","deleteProperty","undefined","PROXY","mutatingMethods","holder","Symbol","fn","arrayFn","methodName","backupArr","from","apply","SELF","deletedItems","addedItems","oldArray","newArray","backupNewArray","backupOldArray","Map","oldLen","i","oldItem","newIndex","newLen","newItem","oldIndex","compareArrays","oldFunc","Function","entries","ISXDATA","stanzHandler","watchs","proxy","proxySelf","revoke","Proxy","revocable","_revoke","descObj","self","_onrevokes","toJSON","isPureArray","maxId","parseInt","JSON","stringify","extend","proto","descriptor","getOwnPropertyNames","getOwnPropertySymbols","result","enumerable","defineProperty","len","join","lastKey","pop","stanz","is"],"mappings":";AAAO,MAAMA,EAAc,IAAMC,KAAKC,SAASC,SAAS,IAAIC,MAAM,GAE5DC,EAAiBC,OAAOC,UAAUJ,SAO3BK,EAAYC,IACvB,MAAMC,GAPgBC,EAODF,EANrBJ,EACGO,KAAKD,GACLE,cACAC,QAAQ,mBAAoB,KAJV,IAACH,EAQtB,MAAgB,UAATD,GAA6B,WAATA,CAAiB,EAGjCK,EAAU,CACrBJ,MAAO,MAGe,oBAAbK,WACLA,SAASC,cACXF,EAAQJ,MAAQK,SAASC,cAAcC,WAAWC,eAAe,SAEjEJ,EAAQJ,OAAQ,GAIpB,IACIS,EADAC,EAAgB,EAEpB,MAAMC,EAAW,IAAIC,IAgDd,SAASC,EAASC,EAAMC,EAAO,GACpC,IAAIC,EAAU,KACVC,EAAU,GAEd,OAAO,YAAaC,GAClBD,EAAQE,QAAQD,GAEZH,EAAO,GACTK,aAAaJ,GACbA,EAAUK,YAAW,KACnBP,EAAKb,KAAKqB,KAAML,GAChBA,EAAU,GACVD,EAAU,IAAI,GACbD,IAEa,OAAZC,IACFA,EAAU,EA/DX,SAAkBO,GAMvB,GALAH,aAAaX,GACbA,EAAaY,YAAW,KACtBX,EAAgB,CAAC,IAGfN,EAAQJ,MAcV,YAbAwB,QAAQC,UAAUC,MAAK,KAErB,GADAhB,IACIA,EAAgB,IAAQ,CAC1B,MAAMiB,EAAO,gCAKb,MAJAC,QAAQC,MAAM,CACZF,OACAG,SAAUP,IAEN,IAAIQ,MAAMJ,EACjB,CAEDJ,GAAU,IAKd,MAAMS,EAAS,KAAK3C,MACpBsB,EAASsB,IAAID,GACbR,QAAQC,UAAUC,MAAK,KAGrB,GAFAhB,IAEIA,EAAgB,IAAO,CACzBC,EAASuB,QACT,MAAMP,EAAO,gCAKb,MAJAC,QAAQC,MAAM,CACZF,OACAG,SAAUP,IAEN,IAAIQ,MAAMJ,EACjB,CACGhB,EAASwB,IAAIH,KACfT,IACAZ,EAASyB,OAAOJ,GACjB,GAGL,CAqBQK,EAAS,KACPrB,EAAU,KACV,MAAME,EAAOD,EAAQxB,QACrBwB,EAAU,GACVH,EAAKb,KAAKqB,KAAMJ,EAAK,IAI/B,CACA,CCpGA,MAAMoB,OAAEA,EAAMC,OAAEA,GAAW5C,OAE3B,MAAM6C,EACJC,YAAYC,GACVJ,EAAOhB,KAAMoB,GACbH,EAAOjB,KACR,CAEDqB,YAAYC,GACV,GAAkB,UAAdtB,KAAKvB,KACP,OAAOuB,KAAKuB,KAAKC,SAASxB,KAAKyB,cAAcC,IAAIJ,IAGnD,MAAMK,EAAOL,EAAEM,MAAM,KAErB,GAAI5B,KAAKyB,gBAAkBzB,KAAK6B,QAAU7B,KAAK8B,OAASH,EAAK,GAC3D,OAAO,EAGT,MAEMI,EAFYC,EAAahC,KAAM2B,GAELM,QAAQjC,KAAK6B,QAC7C,GAAIE,GAAiB,EAAG,CACtB,MAAMG,EAAcP,EAAKxD,MAAM4D,EAAgB,GAE/C,OAAKG,EAAYC,QAKVnC,KAAK8B,OAASI,EAAY,EAClC,CAGD,OAAOlC,KAAKuB,KAAKC,SAASxB,KAAKyB,cAAcH,GAC9C,CAEDc,YAAYd,GACV,GAAkB,QAAdtB,KAAKvB,KACP,OAAO,EAGT,MAAMkD,EAAOL,EAAEM,MAAM,KAErB,GAAI5B,KAAK6B,SAAW7B,KAAKyB,eAAiBzB,KAAK8B,OAASH,EAAK,GAC3D,OAAO,EAGT,MAEMI,EAFYC,EAAahC,KAAM2B,GAELM,QAAQjC,KAAK6B,QAE7C,GAAIE,GAAiB,EAAG,CAGtB,OAFoBJ,EAAKxD,MAAM4D,EAAgB,GAE5B,KAAO/B,KAAK8B,IAChC,CAED,OAAO,CACR,EAGH,MAAME,EAAe,CAACK,EAAOV,KAC3B,MAAMW,EAAY,GAEZC,EAAYZ,EAAKxD,QACvB,IAAI0D,EAASQ,EAAMZ,cACnB,KAAOc,EAAUJ,QAAQ,CACvB,MAAMK,EAAYD,EAAUE,QACxBZ,IACFA,EAASA,EAAOW,IAGlBF,EAAUzC,KAAKgC,EAChB,CAED,OAAOS,CAAS,EAGlB,MAAMI,UAAiBC,MACrBxB,YAAYyB,GACVC,SAASD,EACV,CAEDvB,YAAYyB,GACV,OAAO9C,KAAK+C,MAAMC,GAAMA,EAAE3B,YAAYyB,IACvC,CAEDV,YAAYU,GACV,OAAO9C,KAAK+C,MAAMC,GAAMA,EAAEZ,YAAYU,IACvC,EAGI,MAAMG,EAAa,EACxBxE,OACAgD,gBACAI,SACAC,OACApD,QACAwE,WACAtD,OACA2B,OAAO,OAEP,GAAIA,GAAQA,EAAKC,SAASC,GAExB,YADAnB,QAAQ6C,KAAK,8BAIf,IAAIC,EAAU,CACZ3E,OACAoD,SACAC,OACAoB,WACAxE,SAQF,GALa,UAATD,WACK2E,EAAQ1E,MACf0E,EAAQxD,KAAOA,GAGb6B,EAAc4B,WAAY,CAC5B,MAAMC,EAAU,IAAIpC,EAAQ,CAC1BO,mBACG2B,EACH7B,KAAM,IAAIA,KAGZE,EAAc8B,GAAQC,SAAShE,IAC7BA,EAAK8D,EAAQ,GAEhB,CAED7B,EAAcgC,SACZhC,EAAciC,MAAMF,SAASG,IAC3BV,EAAW,CACTxB,cAAekC,KACZP,EACH7B,KAAM,CAACE,KAAkBF,IACzB,GACF,EAGN,IAAeqC,EAAA,CACbC,MAAM5D,GACJ,MAAM6D,EAAM,KAAO/F,IAInB,OAFAiC,KAAKuD,GAAQQ,IAAID,EAAK7D,GAEf6D,CACR,EAEDE,QAAQF,GACN,OAAO9D,KAAKuD,GAAQzC,OAAOgD,EAC5B,EAEDG,UAAUhE,EAAUR,GAClB,OAAOO,KAAK6D,MACVtE,GAAUqD,KDrBT,SAAqBsB,GAC1B,IACEA,EAAKC,GACN,CAAC,MAAOC,GACP,OAMG,SAAsB7D,GAC3B,MAAM8D,EAAY9D,EAAM+D,MAAM1C,MAAM,OAAO,GAAGhD,cAC9C,SAAIyF,EAAU7C,SAAS,WAAY6C,EAAU7C,SAAS,WAKxD,CAbW+C,CAAaH,EACrB,CAED,OAAO,CACT,ECcYI,CAAYxE,QAIhB4C,EAAMA,EAAI6B,QAAQzB,IAChB,IACEA,EAAEzB,KAAKiC,SAASkB,GAASA,EAAKP,KAC/B,CAAC,MAAOC,GACP,OAAO,CACR,CAED,OAAO,CAAI,IAGbnE,EAAS,IAAIyC,EAASE,IAAK,GAC1BnD,GAAQ,GAEd,EAEDkF,QAAQvD,GACN,MAAMgC,EAAU,IACXhC,EACH3C,KAAM,UACNoD,OAAQ7B,KACRyB,cAAezB,MAEjBiD,EAAWG,EACZ,EACDwB,WAAWpF,GACT,OAAO,IAAIU,SAASC,IAClB,IAAI0E,EACJ,MAAMC,EAAM9E,KAAK6D,MACdgB,EAAI,KACUrF,MAEXQ,KAAKgE,QAAQc,GACb3E,EAAQH,MACT,GAIL6E,GAAG,GAEN,GCxMH,MAAQE,iBAAAA,GAAqB1G,OAEhB2G,EAAU,EAAGnD,SAAQiB,MAAKpE,QAAOuG,WAAUxG,OAAMyG,cAC5D,MAAMhC,EAAW+B,EAASnC,GAE1B,IAAIoB,EAAOxF,EACX,GAAIyG,EAAQjB,GAAO,CACjB,GAAIhB,IAAaxE,EACf,OAAO,EAETwF,EAAKkB,OAAOvF,KAAKoF,EACrB,MAAS,GAAI1G,EAASG,GAAQ,CAC1B,MAAM2B,EAAOhC,OAAOgH,yBAAyBxD,EAAQiB,GAChDzC,IAAQA,EAAKnB,eAAe,WAC/BgF,EAAO,IAAIoB,EAAM5G,GACjBwF,EAAKkB,OAAOvF,KAAKoF,GAEpB,CAED,MAAMM,EAASrC,IAAaxE,GAEvB6G,GAAUJ,EAAQjC,IACrBsC,EAAUtC,EAAU+B,GAGtB,MAAMQ,EAAQP,EAAQhB,GActB,OAZCqB,IAEE1D,EAAO6D,YACRzC,EAAW,CACTxE,KAAMA,GAAQ,MACdoD,OAAQoD,EACRxD,cAAewD,EACfnD,KAAMgB,EACNpE,QACAwE,aAGGuC,CAAK,EAGDD,EAAY,CAACG,EAAK9D,KAC7B,GAAIsD,EAAQQ,GAAM,CAChB,MAAMC,EAAQD,EAAIP,OAAOnD,QAAQJ,GAC7B+D,GAAS,EACXD,EAAIP,OAAOS,OAAOD,EAAO,GAEzBtF,QAAQC,MAAM,CACZF,KAAM,+EACNwB,SACAiE,SAAUH,GAGf,GAGUI,EAAU,CACrBhC,IAAIlC,EAAQiB,EAAKpE,EAAOuG,GACtB,GAAmB,iBAARnC,EACT,OAAOkD,QAAQjC,IAAIlC,EAAQiB,EAAKpE,EAAOuG,GAIzC,GAAI,KAAKgB,KAAKnD,GAYZ,OAXKjB,EAAO3C,eAAe4D,GASzBkD,QAAQjC,IAAIlC,EAAQiB,EAAKpE,EAAOuG,GARhCF,EAAiBlD,EAAQ,CACvBiB,CAACA,GAAM,CACLoD,UAAU,EACVC,cAAc,EACdzH,YAMC,EAGT,IACE,OAAOsG,EAAQ,CACbnD,SACAiB,MACApE,QACAuG,WACAC,QAAQhB,GACC8B,QAAQjC,IAAIlC,EAAQiB,EAAKoB,EAAMe,IAG3C,CAAC,MAAO1E,GACP,MAAM6D,EAAM,IAAI3D,MAAM,iBAAiBqC,QAAUvC,EAAM+D,QAAS,CAC9D8B,MAAO7F,IAST,MANAlC,OAAO2C,OAAOoD,EAAK,CACjBtB,MACApE,QACAmD,OAAQoD,IAGJb,CACP,CACF,EACDiC,eAAc,CAACxE,EAAQiB,IACjB,KAAKmD,KAAKnD,IAAuB,iBAARA,EACpBkD,QAAQK,eAAexE,EAAQiB,GAGjCkC,EAAQ,CACbnD,SACAiB,MACApE,WAAO4H,EACPrB,SAAUpD,EAAO0E,GACjB9H,KAAM,SACNyG,QAAO,IACEc,QAAQK,eAAexE,EAAQiB,MClHxC0D,EAAkB,CACtB,OACA,MACA,QACA,UACA,SACA,UACA,OACA,OACA,cAGIC,EAASC,OAAO,eAiCtB,MAAMC,EAAK,CAAA,EAELC,EAAUjE,MAAMrE,UAEtBkI,EAAgBhD,SAASqD,IACnBD,EAAQC,KACVF,EAAGE,GAAc,YAAajH,GAC5B,MAAMkH,EAAYnE,MAAMoE,KAAK/G,MAEvByF,EAAQmB,EAAQC,GAAYG,MAAMhH,KAAKiH,GAAOrH,IAE9CsH,aAAEA,EAAYC,WAAEA,GA1C5B,SAAuBC,EAAUC,GAC/B,MAAMC,EAAiB3E,MAAMoE,KAAKM,GAC5BE,EAAiB5E,MAAMoE,KAAKK,GAC5BF,EAAe,GACfC,EAAa,IAAIK,IAEjBC,EAASL,EAASjF,OACxB,IAAK,IAAIuF,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,MAAMC,EAAUP,EAASM,GACnBE,EAAWN,EAAerF,QAAQ0F,GACpCC,GAAY,EACdN,EAAeM,GAAYnB,EAE3BS,EAAarH,KAAK8H,EAErB,CAED,MAAME,EAASR,EAASlF,OACxB,IAAK,IAAIuF,EAAI,EAAGA,EAAIG,EAAQH,IAAK,CAC/B,MAAMI,EAAUT,EAASK,GACnBK,EAAWR,EAAetF,QAAQ6F,GACpCC,GAAY,EACdR,EAAeQ,GAAYtB,EAE3BU,EAAWpD,IAAI2D,EAAGI,EAErB,CAED,MAAO,CAAEZ,eAAcC,aACzB,CAa2Ca,CAAclB,EAAW9G,MAG9D,IAAK,IAAK8C,EAAKpE,KAAUyI,EACnBhC,EAAQzG,GACVA,EAAM0G,OAAOvF,KAAKG,MACTzB,EAASG,KAClBsB,KAAK0F,WAAa,EAClB1F,KAAK8C,GAAOpE,SACLsB,KAAK0F,YAIhB,IAAK,IAAIhB,KAAQwC,EACf1B,EAAUd,EAAM1E,MAYlB,OATAiD,EAAW,CACTxE,KAAM,QACNgD,cAAezB,KACf6B,OAAQ7B,KACRJ,OACAkC,KAAM+E,EACN3D,SAAU4D,IAGRrB,IAAUzF,KAAKiH,GACVjH,KAAKuG,GAGPd,CACb,EACG,IAIH,CAAC,SAAU,SAAU,QAAS,UAAW,OAAOjC,SAASqD,IACvD,GAAmB,gBAAfA,GAAgCL,EAAgBhF,SAASqF,GAC3D,OAGF,MAAMoB,EAAUtF,MAAMrE,UAAUuI,GAC5BoB,aAAmBC,WACrBvB,EAAGE,GAAc,YAAajH,GAC5B,OAAOqI,EAAQtJ,KAAKgE,MAAMoE,KAAK/G,SAAUJ,EAC/C,EACG,ICvGH,MAAMmF,iBAAEA,EAAgBM,yBAAEA,EAAwB8C,QAAEA,GAAY9J,OAEnD4I,EAAOP,OAAO,QACdH,EAAQG,OAAO,SACfnD,EAASmD,OAAO,UAChB0B,EAAU1B,OAAO,WAEjBvB,EAAWQ,GAAQA,KAASA,EAAIyC,GAEtC,SAASjH,EAAY+C,EAAM6B,EAAUsC,GAE1C,IAKIC,GALEC,MAAOC,EAASC,OAAEA,GAAWC,MAAMC,UAAU3I,KAAM+F,GAwDzD,OArDAyC,EAAU/E,QAAU,EAIpBsB,EAAiB/E,KAAM,CACrBmE,IAAK,CAAEzF,MAAOwF,EAAKC,KAAOpG,KAE1BqH,OAAQ,CACN1G,MAAO,IAETgF,MAAO,CACLyC,cAAc,EACdzE,MACE,OAAO,IAAIpC,IAAIU,KAAKoF,OACrB,GAEHgD,CAACA,GAAU,CACT1J,OAAO,GAETuI,CAACA,GAAO,CACNd,cAAc,EACdzE,IAAK,IAAM1B,MAEbuG,CAACA,GAAQ,CACPJ,cAAc,EACdzE,IAAK,IAAM8G,GAGbjF,CAACA,GAAS,CACR7B,IAAK,IAAM4G,IAAWA,EAAS,IAAId,MAErCnE,WAAY,CACV3B,IAAK,MAAQ4G,GAEfM,QAAS,CACPlK,MAAO+J,KAIXpK,OAAOsD,KAAKuC,GAAMV,SAASV,IACzB,MAAM+F,EAAUxD,EAAyBnB,EAAMpB,GAC/C,IAAIpE,MAAEA,EAAKgD,IAAEA,EAAGqC,IAAEA,GAAQ8E,EAEtBnH,GAAOqC,EACTgB,EAAiB/E,KAAM,CACrB8C,CAACA,GAAM+F,IAITL,EAAU1F,GAAOpE,CAClB,IAGI8J,CACT,CAEe,MAAMlD,UAAc3C,MACjCxB,YAAY+C,GAGV,OAFArB,QAEO1B,EAAYxC,KAAKqB,KAAMkE,EAC/B,CAGDuE,SACE,MAAMK,EAAO9I,KAAKiH,GAEd6B,EAAKC,aACPD,EAAKC,WAAWvF,SAASqB,GAAMA,MAC/BiE,EAAKC,WAAW5G,OAAS,GAG3B2G,EAAKpD,WAAa,EAElBoD,EAAKvF,GAAQ3C,QAEbuH,EAAQnI,MAAMwD,SAAQ,EAAE1B,EAAMpD,MACxByG,EAAQzG,KACVsB,KAAK8B,GAAQ,KACd,IAGHgH,EAAK1D,OAAO5B,SAASG,IACnBwE,EAAQxE,GAAQH,SAAQ,EAAE1B,EAAMpD,MAC1BA,IAAUsB,OACZ2D,EAAO7B,GAAQ,KAChB,GACD,WAGGgH,EAAK7B,UACL6B,EAAKvC,GACZuC,EAAKF,SACN,CAEDI,SACE,IAAIxK,EAAM,CAAA,EAENyK,GAAc,EACdC,GAAS,EAEb7K,OAAOsD,KAAK3B,MAAMwD,SAASlC,IACzB,IAAIqE,EAAM3F,KAAKsB,GAEV,KAAK2E,KAAK3E,GAMb2H,GAAc,GALd3H,EAAI6H,SAAS7H,IACL4H,IACNA,EAAQ5H,GAMR6D,EAAQQ,KACVA,EAAMA,EAAIqD,UAGZxK,EAAI8C,GAAKqE,CAAG,IAGVsD,IACFzK,EAAI2D,OAAS+G,EAAQ,EACrB1K,EAAMmE,MAAMoE,KAAKvI,IAGnB,MAAM2F,EAAMnE,KAAKmE,IAOjB,OANAY,EAAiBvG,EAAK,CACpB2F,IAAK,CACHzC,IAAK,IAAMyC,KAIR3F,CACR,CAEDN,WACE,OAAOkL,KAAKC,UAAUrJ,KAAKgJ,SAC5B,CAEDM,OAAO9K,EAAK6B,GACV,MJrDkB,EAACgC,EAAOkH,EAAOC,EAAa,CAAA,KAChD,IACKnL,OAAOoL,oBAAoBF,MAC3BlL,OAAOqL,sBAAsBH,IAChC/F,SAASlC,IACT,MAAMqI,EAAStL,OAAOgH,yBAAyBkE,EAAOjI,IAChD6E,aAAEA,EAAYyD,WAAEA,EAAU1D,SAAEA,EAAQxE,IAAEA,EAAGqC,IAAEA,EAAGrF,MAAEA,GAAUiL,EAE5D,UAAWA,EACTtH,EAAMnD,eAAeoC,GACvBe,EAAMf,GAAK5C,EAEXL,OAAOwL,eAAexH,EAAOf,EAAG,CAC9BsI,aACAzD,eACAD,cACGsD,EACH9K,UAIJL,OAAOwL,eAAexH,EAAOf,EAAG,CAC9BsI,aACAzD,kBACGqD,EACH9H,MACAqC,OAEH,IAGI1B,GIsBEiH,CAAOtJ,KAAMxB,EAAK6B,EAC1B,CAEDqB,IAAIoB,GACF,GAAI,KAAKmD,KAAKnD,GAAM,CAClB,MAAMnB,EAAOmB,EAAIlB,MAAM,KACvB,IAAIC,EAAS7B,KACb,IAAK,IAAI0H,EAAI,EAAGoC,EAAMnI,EAAKQ,OAAQuF,EAAIoC,EAAKpC,IAC1C,IACE7F,EAASA,EAAOF,EAAK+F,GACtB,CAAC,MAAOnH,GACP,MAAM6D,EAAM,IAAI3D,MACd,wBAAwBkB,EAAKxD,MAAM,EAAGuJ,GAAGqC,KAAK,UAC5CxJ,EAAM+D,QAER,CAAE8B,MAAO7F,IAKX,MAHAlC,OAAO2C,OAAOoD,EAAK,CACjBvC,WAEIuC,CACP,CAGH,OAAOvC,CACR,CAED,OAAO7B,KAAK8C,EACb,CACDiB,IAAIjB,EAAKpE,GACP,GAAI,KAAKuH,KAAKnD,GAAM,CAClB,MAAMnB,EAAOmB,EAAIlB,MAAM,KACjBoI,EAAUrI,EAAKsI,MACrB,IAAIpI,EAAS7B,KACb,IAAK,IAAI0H,EAAI,EAAGoC,EAAMnI,EAAKQ,OAAQuF,EAAIoC,EAAKpC,IAC1C,IACE7F,EAASA,EAAOF,EAAK+F,GACtB,CAAC,MAAOnH,GACP,MAAM6D,EAAM,IAAI3D,MACd,wBAAwBkB,EAAKxD,MAAM,EAAGuJ,GAAGqC,KAAK,UAC5CxJ,EAAM+D,QAER,CAAE8B,MAAO7F,IAKX,MAHAlC,OAAO2C,OAAOoD,EAAK,CACjBvC,WAEIuC,CACP,CAGH,OAAQvC,EAAOmI,GAAWtL,CAC3B,CAED,OAAQsB,KAAK8C,GAAOpE,CACrB,EAGH4G,EAAMhH,UAAUgL,OACd,IAAK1F,KAAYgD,GACjB,CACEgD,YAAY,ICzNX,MAACM,EAAShG,GACN,IAAIoB,EAAMpB,GAGnB7F,OAAO2C,OAAOkJ,EAAO,CAAEC,GAAIhF"}